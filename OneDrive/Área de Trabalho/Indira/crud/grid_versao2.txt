import React, { useState, useEffect } from "react";
import axios from "axios";
import styled from "styled-components";
import { FaTrash, FaEdit } from "react-icons/fa";
import { toast } from "react-toastify";

const Table = styled.table`
  width: 100%;
  background-color:  #fff;
  padding: 20px;
  box-shadow: 0px 0px 3px #5d8aaf;
  border-radius: 5px;
  max-width: 1120px;
  margin-top: 40px auto;
  word-break: break-all;
  border-top: 2px solid #2b739f;
`;

export const Thead = styled.thead``;
export const Tbody = styled.tbody``;
export const Tr = styled.tr``;

export const Th = styled.th`
  text-align: start;
  border-bottom: inset;
  padding-bottom: 5px;

  @media (max-width: 500px) {
    ${(props) => props.onlyWeb && "display: none"}
  }
`;

export const Td = styled.td`
  padding-top: 15px;
  text-align: ${(props) => (props.alignCenter ? "center" : "start")};
  width: ${(props) => (props.width ? props.width : "auto")};

  @media (max-width: 500px) {
    ${(props) => props.onlyWeb && "display: none"}
  }
`;

const FilterInput = styled.input`
  width: 97%;
  padding: 10px;
  margin-bottom: 20px;
   border-radius: 5px;
  border: 1px solid #2b739f;
   box-shadow: 0px 0px 3px #5d8aaf;
  max-width: 1120px;
`;

const Grid = ({ users, setUsers, setOnEdit }) => {
  const [filter, setFilter] = useState("");
  const [filteredUsers, setFilteredUsers] = useState(users);

  useEffect(() => {
    setFilteredUsers(
      users.filter(
        (user) =>
          user.Equipamento.toLowerCase().includes(filter.toLowerCase()) ||
          user.Subestacao.toLowerCase().includes(filter.toLowerCase()) ||
          user.plc.toLowerCase().includes(filter.toLowerCase())
      )
    );
  }, [filter, users]);

  const handleEdit = (item) => {
    setOnEdit(item);
  };

  const handleDelete = async (id) => {
    await axios
      .delete("http://localhost:8800/" + id)
      .then(({ data }) => {
        const newArray = users.filter((user) => user.id !== id);

        setUsers(newArray);
        toast.success(data);
      })
      .catch(({ data }) => toast.error(data));

    setOnEdit(null);
  };

  

  return (
    <>
      <FilterInput
        type="text"
        placeholder="Pesquise aqui..."
        value={filter}
        onChange={(e) => setFilter(e.target.value)}
      />
      <Table>
        <Thead>
          <Tr>
            <Th>Equipamento</Th>
            <Th>Subestação</Th>
            <Th onlyWeb>PLC</Th>
            <Th></Th>
            <Th></Th>
          </Tr>
        </Thead>
        <Tbody>
          {filteredUsers.map((item, i) => (
            <Tr key={i}>
              <Td width="30%">{item.Equipamento}</Td>
              <Td width="30%">{item.Subestacao}</Td>
              <Td width="20%" onlyWeb>
                {item.plc}
              </Td>
              <Td alignCenter width="5%">
                <FaEdit onClick={() => handleEdit(item)} color="DarkGreen" />
              </Td>
              <Td alignCenter width="5%">
                <FaTrash onClick={() => handleDelete(item.id)} color="OrangeRed" />
              </Td>
            </Tr>
          ))}
        </Tbody>
      </Table>
    </>
  );
};

export default Grid;